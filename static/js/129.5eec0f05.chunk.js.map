{"version":3,"file":"static/js/129.5eec0f05.chunk.js","mappings":"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","sources":["components/count/Count.styled.jsx","components/count/Count.jsx","components/cart/Cart.styled.jsx","components/cart/Cart.jsx","components/shoppingCart/ShoppingCart.styled.jsx","components/shoppingCart/SoppingCart.jsx","pages/ShoppingCartPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapCount = styled.div`\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  width: 90px;\n  height: 50px;\n`;\n\nexport const WrapArrows = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Btn = styled.button`\n  width: 26px;\n  height: 26px;\n`;\n","import { AiFillCaretUp, AiFillCaretDown } from 'react-icons/ai';\nimport { WrapCount, Input, WrapArrows, Btn } from './Count.styled';\n\nexport const Count = ({\n  count,\n  id,\n  incrementCount,\n  decrementCount,\n  changeValue,\n}) => {\n  return (\n    <WrapCount>\n      <Input\n        type=\"number\"\n        min=\"1\"\n        max=\"50\"\n        value={count}\n        onChange={evt => changeValue(id, evt.target.value)}\n      />\n      <WrapArrows>\n        <Btn type=\"button\" onClick={() => incrementCount(id)}>\n          <AiFillCaretUp />\n        </Btn>\n        <Btn type=\"button\" onClick={() => decrementCount(id)}>\n          <AiFillCaretDown />\n        </Btn>\n      </WrapArrows>\n    </WrapCount>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Section = styled.section`\n  border: 1px solid black;\n  border-radius: 20px;\n  width: 800px;\n  padding: 15px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 70px;\n  margin-bottom: 20px;\n  border: 1px solid black;\n  border-radius: 15px;\n  padding: 20px;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n  border-radius: 15px;\n`;\n\nexport const Wrap = styled.div`\n  flex-direction: column;\n`;\n\nexport const Btn = styled.button`\n  display: block;\n  height: 40px;\n  margin-top: auto;\n  margin-bottom: auto;\n  border-radius: 10px;\n  border: 1px solid black;\n  padding: 5px;\n  cursor: pointer;\n\n  &:hover {\n    transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1.05);\n    border-color: #5cd3a8;\n    color: #5cd3a8;\n  }\n`;\n","import { Count } from '../count/Count';\nimport {\n  Wrapper,\n  Section,\n  List,\n  ListItem,\n  Img,\n  Wrap,\n  Btn,\n} from './Cart.styled';\n\nexport const Cart = ({\n  goodsToCart,\n  total,\n  onDeleteFromShoppingCart,\n  onIncrementCount,\n  onDecrementCount,\n  onChangeValue,\n}) => {\n  return (\n    <>\n      <Wrapper>\n        <Section>\n          <List>\n            {goodsToCart.map(el => (\n              <ListItem key={el.id}>\n                <Img src={el.photo} alt=\"\" />\n                <Wrap>\n                  <h3>{el.name}</h3>\n                  <p>Price: {el.totalPrice}</p>\n                  <Count\n                    count={el.count}\n                    incrementCount={onIncrementCount}\n                    decrementCount={onDecrementCount}\n                    id={el.id}\n                    changeValue={onChangeValue}\n                  />\n                </Wrap>\n                <Btn\n                  type=\"button\"\n                  onClick={() => onDeleteFromShoppingCart(el.id)}\n                >\n                  delete from Cart\n                </Btn>\n              </ListItem>\n            ))}\n          </List>\n        </Section>\n      </Wrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Form as FormikForm, ErrorMessage as FormikError } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  padding: 15px;\n  width: 400px;\n`;\n\nexport const Wrap = styled.div`\n  border: 1px solid black;\n  border-radius: 20px;\n  padding: 15px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 300px;\n  margin-bottom: 25px;\n`;\n\nexport const BtnSubmit = styled.button`\n  display: block;\n  width: 150px;\n  height: 60px;\n  font-size: 25px;\n  border-radius: 10px;\n  border: 1px solid black;\n  padding: 5px;\n  cursor: pointer;\n\n  &:hover {\n    transition: transform 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1.05);\n    border-color: #5cd3a8;\n    color: #5cd3a8;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  width: 100%;\n`;\n\nexport const SubmitWrap = styled.div`\n  display: flex;\n  margin-top: 30px;\n  justify-content: flex-end;\n  gap: 80px;\n`;\n","import { Formik, Field } from 'formik';\nimport { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport { Cart } from '../cart/Cart';\nimport {\n  Form,\n  Wrap,\n  Wrapper,\n  FormField,\n  BtnSubmit,\n  ErrorMessage,\n  SubmitWrap,\n} from './ShoppingCart.styled';\n\nconst CartSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Name may contain only letters, apostrophe, dash and spaces!'\n    ),\n  email: Yup.string().email().required('Required'),\n  phone: Yup.string()\n    .required('Required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +!'\n    ),\n  address: Yup.string().required('Required'),\n});\n\nexport const ShoppingCart = ({\n  goodsToCart,\n  total,\n  onDeleteFromShoppingCart,\n  onIncrementCount,\n  onDecrementCount,\n  onChangeValue,\n  onSubmit,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        phone: '',\n        address: '',\n      }}\n      validationSchema={CartSchema}\n      onSubmit={(values, actions) => {\n        onSubmit({\n          ...values,\n          id: nanoid(),\n        });\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Wrapper>\n          <Wrap>\n            <FormField>\n              Name\n              <Field name=\"name\" type=\"text\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </FormField>\n            <FormField>\n              Email\n              <Field name=\"email\" type=\"text\" />\n              <ErrorMessage name=\"email\" component=\"span\" />\n            </FormField>\n            <FormField>\n              Phone\n              <Field name=\"number\" type=\"tel\" />\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </FormField>\n            <FormField>\n              Address\n              <Field name=\"address\" type=\"text\" />\n              <ErrorMessage name=\"address\" component=\"span\" />\n            </FormField>\n          </Wrap>\n          <Cart\n            goodsToCart={goodsToCart}\n            total={total}\n            onDeleteFromShoppingCart={onDeleteFromShoppingCart}\n            onIncrementCount={onIncrementCount}\n            onDecrementCount={onDecrementCount}\n            onChangeValue={onChangeValue}\n          />\n        </Wrapper>\n        <SubmitWrap>\n          <h3>Total price: {total}</h3>\n          <BtnSubmit type=\"submit\">Submit</BtnSubmit>\n        </SubmitWrap>\n      </Form>\n    </Formik>\n  );\n};\n","import { ShoppingCart } from '../components/shoppingCart/SoppingCart';\n\nconst ShoppingCartPage = ({\n  goodsToCart,\n  total,\n  onDeleteFromShoppingCart,\n  onIncrementCount,\n  onDecrementCount,\n  onChangeValue,\n  onSubmit,\n}) => {\n  return (\n    <ShoppingCart\n      goodsToCart={goodsToCart}\n      total={total}\n      onDeleteFromShoppingCart={onDeleteFromShoppingCart}\n      onIncrementCount={onIncrementCount}\n      onDecrementCount={onDecrementCount}\n      onChangeValue={onChangeValue}\n      onSubmit={onSubmit}\n    />\n  );\n};\n\nexport default ShoppingCartPage;\n"],"names":["WrapCount","styled","Input","WrapArrows","Btn","Count","count","id","incrementCount","decrementCount","changeValue","type","min","max","value","onChange","evt","target","onClick","Wrapper","Section","List","ListItem","Img","Wrap","Cart","goodsToCart","onDeleteFromShoppingCart","total","onIncrementCount","onDecrementCount","onChangeValue","map","el","src","photo","alt","name","totalPrice","Form","FormikForm","FormField","BtnSubmit","ErrorMessage","FormikError","SubmitWrap","CartSchema","Yup","shape","required","matches","email","phone","address","ShoppingCart","onSubmit","initialValues","validationSchema","values","actions","nanoid","resetForm","component"],"sourceRoot":""}